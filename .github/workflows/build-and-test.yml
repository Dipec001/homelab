# This is a multi OS, multi job workflow - prints the OS too

name: Python CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Setup
      - name: Setup python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.9  # Specify Python version

      - name: Install dependencies (if any)
        run: |
          if [ -f mypythonproject/requirements.txt ]; then pip install -r mypythonproject/requirements.txt; fi
      # Checks for `requirements.txt` and installs dependencies only if it exists
        shell: bash
        if: runner.os == 'Linux' || runner.os == 'macOS'

      - name: Install dependencies (if any, Windows)
        run: |
          if (Test-Path "mypythonproject/requirements.txt") { pip install -r mypythonproject/requirements.txt }
        shell: powershell
        if: runner.os == 'Windows'

      - name: List installed Python packages (debugging)
        run: pip list
          
  # Second job: Test (depends on 'build' job)
  test:
    needs: build  # This ensures 'test' runs only after 'build' completes successfully
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: 
        os: [ubuntu-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4  # Needed because each job runs in a fresh VM

      - name: Echo OS
        run: echo "Running on ${{ matrix.os }}"
      
      - name: Setup Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: 3.9

      - name: Install dependencies (if any)
        run: |
          if [ -f mypythonproject/requirements.txt ]; then pip install -r mypythonproject/requirements.txt; fi
        shell: bash
        if: runner.os == 'Linux' || runner.os == 'macOS'

      - name: Install dependencies (if any, Windows)
        run: |
          if (Test-Path "mypythonproject/requirements.txt") { pip install -r mypythonproject/requirements.txt }
        shell: powershell
        if: runner.os == 'Windows'

      - name: Set PYTHONPATH on Linux or Windows
        run: |
          if ($Env:RUNNER_OS -eq 'Windows') {
              echo "PYTHONPATH=$Env:PYTHONPATH;/home/runner/work/homelab/homelab" >> $GITHUB_ENV
          } else {
              echo "PYTHONPATH=$PYTHONPATH:/home/runner/work/homelab/homelab" >> $GITHUB_ENV
          }


      - name: Run tests with pytest
        run: |
          pytest mypythonproject/tests || echo "No tests found. Skipping..."
        shell: bash
        if: runner.os != 'Windows'

      - name: Run tests with pytest (Windows)
        run: |
          if (Test-Path ".\tests\") { pytest } else { Write-Host "No tests found. Skipping..." }
        shell: powershell
        if: runner.os == 'Windows'
